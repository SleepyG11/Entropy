[manifest]
version = "1.0.0"
dump_lua = true
priority = -1

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "G.shop_jokers:emplace(create_card_for_shop(G.shop_jokers))"
position = "at"
payload = '''
local pinned = nil
if G.GAME.entr_pinned_cards then
    for i2, v in pairs(G.GAME.entr_pinned_cards) do
        if v.area == "shop_jokers" and v.pos == i then
            pinned = v
        end
    end
end
if pinned then
    local card = create_card_for_shop(G.shop_jokers)
    card:set_ability(G.P_CENTERS[pinned.card])
    card.area = G.shop_jokers
    table.insert(G.shop_jokers.cards, card)
else
    G.shop_jokers:emplace(create_card_for_shop(G.shop_jokers))
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "G.CONTROLLER:snap_to({node = G.shop:get_UIE_by_ID('next_round_button')})"
position = "before"
payload = '''
if G.GAME.entr_pinned_cards then
    for i, v in pairs(G.GAME.entr_pinned_cards) do
        if v.area ~= "shop_jokers" then
            local area = G[v.area]
            area.cards[v.pos]:start_dissolve()
            local card = create_card_for_shop(area)
            card:set_ability(G.P_CENTERS[v.card])
            card.area = area
            area.cards[v.pos] = card
        end
    end
end
G.GAME.entr_pinned_cards = nil
'''
match_indent = true