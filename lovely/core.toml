[manifest]
version = "1.0.0"
dump_lua = true
priority = -1

[[patches]]
[patches.pattern]
target = "main.lua"
pattern = '''function love.load()'''
position = "before"
payload = '''
Entropy = {}
Entropy.FlipsideInversions = {}
Entropy.EnhancementFuncs = {}
Entropy.RarityChecks = {
    [0]="cry_candy",
    1,
    2,
    3,
    "cry_epic",
    4,
    "cry_exotic",
    "entr_entropic"
}
Entropy.BoosterSets = {
    ["Spectral"] = "p_spectral_mega_1",
    ["Tarot"] = "p_arcana_mega_1",
    ["Planet"] = "p_celestial_mega_1",
    ["Spectral"] = "p_spectral_mega_1",
    ["Code"] = "p_cry_code_mega_1",
    ["RCode"] = "p_entr_twisted_pack_mega",
    ["RPlanet"] = "p_entr_twisted_pack_mega",
    ["RSpectral"] = "p_entr_twisted_pack_mega",
}
Entropy.DefineBlacklist = {
    c_black_hole = true,
    c_soul = true,
    c_cry_gateway = true,
    c_cry_white_hole = true,
    c_cry_pointer = true,
    c_entr_fervour = true,
    c_entr_define = true,
    Back = true,
    Sleeve = true,
    Edition = true
}

Entropy.ChaosBlacklist = {}
Entropy.ParakmiBlacklist = {}
Entropy.ChaosConversions = {}
'''
match_indent = true


[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''(self.ability.set == 'Voucher' and {G.C.SECONDARY_SET.Voucher, G.C.CLEAR}) or'''
position = "at"
payload = '''
(self.ability.set == 'Voucher' and {G.C.SECONDARY_SET.Voucher, G.C.CLEAR}) or (G.C.Entropy.Dissolve[self.ability.set] and {G.C.Entropy.Dissolve[self.ability.set]}) or
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card_character.lua"
pattern = 'self.children.card:set_ability(G.P_CENTERS.j_jolly)'
position = "after"
payload = "self.children.card:set_ability(G.P_CENTERS.j_entr_surreal_joker)"
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = 'Cryptid.profile_prefix = "M"'
position = "after"
payload = 'Cryptid.profile_prefix = Cryptid.profile_prefix == "M" and "E" or Cryptid.profile_prefix.."E"'
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = 'Cryptid.profile_prefix = Jen and "J" or "M"'
position = "after"
payload = 'Cryptid.profile_prefix = Cryptid.profile_prefix == "M" and "E" or Cryptid.profile_prefix.."E"'
match_indent = true